var e={d:(t,s)=>{for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{g:()=>i});const s={remove(){if(this._signal){const{_slots:e}=this._signal,t=e.indexOf(this);-1!==t&&(e.splice(t,1),this._signal=null)}return this}},r={add(e,t=!1){let r;return this.has(e)||(r=function(e,t,r=!1){return Object.create(s,{_listener:{writable:!1,value:e},_signal:{writable:!0,value:t},once:{writable:!1,value:r},isBound:{get:function(){return!!this._signal}}})}(e,this,t),this._slots.push(r)),r},addOnce(e){return this.add(e,!0)},clear(){return this._slots.forEach((e=>e._signal=null)),this._slots.splice(0,Number.MAX_SAFE_INTEGER),this},dispatch(...e){return this._values.splice(0,Number.MAX_SAFE_INTEGER,...e),this._slots.forEach((t=>{t._listener(...e),t.once&&t.remove()})),this},has(e){return void 0!==this._slots.find((t=>t._listener===e))}};function i(...e){const t={_values:{writable:!1,value:e},_slots:{writable:!1,value:[]},length:{get:function(){return this._slots.length}}},s=Object.create(r,t);return Object.defineProperties((()=>{const{_values:e}=s;return 1===e.length?e[0]:e}),Object.keys({...r,...t}).reduce(((e,t)=>(e[t]={get:()=>s[t]},e)),{}))}var n=t.g;export{n as createSignal};